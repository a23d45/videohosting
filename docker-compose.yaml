version: '3.8'

services:
  database:
    image: postgres:15.1-alpine
    container_name: postgres_app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: CMD-SHELL pg_isready -U postgres || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  redis:
    image: redis:7.0-alpine
    container_name: redis_app
    ports:
      - "6379:6379"
    healthcheck:
      test: CMD-SHELL redis-cli ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    
  celery:
    build:
      context: .
    container_name: celery_app
    command: celery -A config.celery worker -l info
    depends_on:
      - redis
    
  videohosting:
    build:
      context: .
    container_name: videohosting_app
    ports:
      - "8000:8000"
    depends_on:
      - database

volumes:
  postgres_data:
       



      

    
